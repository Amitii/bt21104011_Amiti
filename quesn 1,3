Ques-1. What is the difference between in-place and out-place sorting algorithms?

	Ans-1.

	  In-place algorithms
	a.Transforms the input without using any extra memory.
	  As the algorithm executes, the input is usually overwritten by the output, Also,
    no additional space is needed for this operation.

	b. An in-place algorithm may require a small amount of extra memory for its
	   operation. But the amount of memory required must be independent of 
	   input size and should be constant.

	c. Several sorting algorithms rearrange the input into sorted order in-place, like
	   insertion sort, selection sort, quick sort, bubble sort, heap sort, etc. 
	   a constant amount of extra space is required for rearranging the
	   elements in the input array.

	d. Usually, an algorithm is categorized as an in-place or an out-of-place
  	algorithm based on the explicit storage allocated by the algorithm. However,
  	calling a recursive algorithm as in-place is highly debatable since extra space
  	is being used by the call stack. Although this space required by the call stack
  	technically takes the recursive algorithms out of the in-place algorithms
  	category, the algorithms requiring only O(log(n)) additional space is
  	considered to be in-place.

	e. Usually used in an embedded system that runs in
	   limited memory. They reduce the space requirements to a great extent, but
	   the algorithm time complexity increases in some cases.

	
	Out-of-place algorithms
	a. An algorithm that is not in-place is called a not-in-place or out-of-place
     algorithm. Here, the extra space used by an out-of place algorithm depends on the input size.

  b.  The standard merge sort algorithm is an example of out-of-place algorithm as
      it requires O(n) extra space for merging. The merging can be done in-place,
     but it increases the time complexity of the sorting routine.
     
     
     
     
     Ques-3. Suggest some practical examples of using in-place and out-place techniques.

	Ans-3 
	In-place techniques- 
1)	Bubble sort is an example of in-place sorting technique. It usually
  	excludes the space used for stack in recursive algorithms.
2)  Quick sort, uses only some
    constant number of variables for partitioning purpose.

		Out-place techniques- 
1)  Merge sort, merge function requires extra linear space which is not
    constant. So, it is not in-place. Hence, it is called 'out of place' algorithm.
2)Insertion Sort:
   it processes the array (not just elements) from left to right
 	 and if new elements are added to the right, it doesnâ€™t impact the ongoing operation.

